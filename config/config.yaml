# 应用基础配置
app:
  debug: true  # 开发环境下启用调试模式和热重载
  host: 0.0.0.0
  port: 8080
  log_level: INFO

# Prometheus配置
prometheus:
  host: 127.0.0.1:9090
  timeout: 30

# LLM模型配置
llm:
  provider: openai # 可选值: openai, ollama - 设置主要的LLM提供商
  model: Qwen/Qwen3-14B # 使用OpenAI提供商时的模型名称
  task_model: Qwen/Qwen2.5-14B-Instruct
  temperature: 0.7
  max_tokens: 2048
  request_timeout: 360 # LLM请求超时时间(秒)
  # 备用Ollama模型配置
  ollama_model: qwen2.5:3b # Ollama本地模型名称
  ollama_base_url: http://127.0.0.1:11434/v1 # Ollama API基础URL

# 测试配置
testing:
  skip_llm_tests: false # 设置为true可跳过依赖LLM的测试

# Kubernetes配置
kubernetes:
  in_cluster: false
  config_path: ./deploy/kubernetes/config
  namespace: default

# 根因分析配置
rca:
  default_time_range: 30
  max_time_range: 1440
  anomaly_threshold: 0.65
  correlation_threshold: 0.7
  
  # 指标收集器配置
  metrics:
    step_interval: "1m"
    concurrent_limit: 3
    cache_size: 100
    cache_ttl: 60 # 缓存过期时间(秒)
    anomaly_cache_size: 500
    thresholds: # 阈值配置
      cpu_usage:
        warning: 0.7
        critical: 0.9
      memory_usage:
        warning: 0.8
        critical: 0.95
      disk_usage:
        warning: 0.75
        critical: 0.9
      error_rate:
        warning: 0.01
        critical: 0.05
      restart_count:
        warning: 3
        critical: 10
    default_metrics:
      - container_cpu_usage_seconds_total
      - container_memory_working_set_bytes
      - kube_pod_container_status_restarts_total
      - kube_pod_status_phase
      - node_cpu_seconds_total
      - node_memory_MemFree_bytes
      - kubelet_http_requests_duration_seconds_count
      - kubelet_http_requests_duration_seconds_sum

  # 事件收集器配置
  events:
    default_event_types: ["Warning", "Normal"]
    batch_size: 100
    max_events_limit: 1000
    concurrent_limit: 5
    
  # 日志收集器配置  
  logs:
    max_lines: 500
    error_lines: 200
    concurrent_limit: 5
    cache_size: 1000
    dedup_cache_size: 10000
    max_message_length: 1000
    max_stack_trace_lines: 20
    default_error_only: true
    
  # 通用配置
  max_retries: 3
  timeout: 30

# 预测配置
prediction:
  model_path: data/models/time_qps_auto_scaling_model.pkl
  scaler_path: data/models/time_qps_auto_scaling_scaler.pkl
  max_instances: 20
  min_instances: 1
  prometheus_query: 'rate(nginx_ingress_controller_nginx_process_requests_total{service="ingress-nginx-controller-metrics"}[10m])'

# 通知配置
notification:
  enabled: true

# Tavily搜索配置
tavily:
  max_results: 5

# Redis配置 - 用于向量数据缓存和元数据存储
redis:
  host: localhost
  port: 6379
  db: 0
  password: "v6SxhWHyZC7S"
  connection_timeout: 5
  socket_timeout: 5
  max_connections: 10
  decode_responses: true

# 小助手配置
rag:
  vector_db_path: data/vector_db
  collection_name: aiops-assistant
  knowledge_base_path: data/knowledge_base
  chunk_size: 1000
  chunk_overlap: 200
  top_k: 8  # 增加检索数量，提高召回率
  similarity_threshold: 0.3  # 降低相似度阈值，提高召回率
  openai_embedding_model: Pro/BAAI/bge-m3
  ollama_embedding_model: nomic-embed-text
  max_context_length: 4000
  temperature: 0.1
  # 超时设置
  timeout: 360 # 智能助手调用超时时间(秒) - 确保足够时间进行复杂推理
  # 缓存设置
  cache_expiry: 3600 # 缓存过期时间(秒)
  # 文档处理设置
  max_docs_per_query: 8 # 每次查询最多处理的文档数
  use_enhanced_retrieval: true # 是否使用增强检索
  use_document_compressor: true # 是否使用文档压缩

# MCP配置
mcp:
  server_url: http://localhost:9000 # MCP服务端地址
  timeout: 30 # 请求超时时间(秒)
  max_retries: 3 # 最大重试次数
  health_check_interval: 30 # 健康检查间隔(秒)
