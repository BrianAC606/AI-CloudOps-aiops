# OOM (Out of Memory) 问题演示
# 内存限制设置过小，会触发OOM Killer
apiVersion: v1
kind: Namespace
metadata:
  name: rca-test-oom
  labels:
    test-scenario: "oom"
    created-by: "rca-testing"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-hog-app
  namespace: rca-test-oom
  labels:
    app: memory-hog
    test-type: "oom"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: memory-hog
  template:
    metadata:
      labels:
        app: memory-hog
        test-type: "oom"
    spec:
      containers:
      - name: memory-consumer
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          echo "开始消耗内存..."
          # 分配200MB内存，但容器限制只有50MB
          dd if=/dev/zero of=/dev/null bs=1M count=200 &
          # 创建大量变量占用内存
          while true; do
            BIGVAR=$(dd if=/dev/zero bs=1M count=10 2>/dev/null | base64)
            echo "内存使用量持续增长: $(date)"
            sleep 2
          done
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "50Mi"  # 故意设置很小的内存限制
            cpu: "200m"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: memory-hog-service
  namespace: rca-test-oom
spec:
  selector:
    app: memory-hog
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP